<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hook</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>againstMovable = 0;
againstGround = 0;
image_xscale = 1.5;
image_yscale = 1.5;
speed = 6;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(objRoboIdle))
{
    instance_destroy();
}

//stop object against blocks
if(instance_place(x+1,y+1,par_corner))
{
    againstGround = 1;
    canJump = 0;
    speed = 0;
    objRoboIdle.hookContact = 1;
    objRoboIdle.player_state = states.Grapple;
}
if(instance_place(x,y+1,par_corner))
{  
    againstGround = 1;
    canJump = 0;
    speed = 0;
    objRoboIdle.hookContact = 1;
    objRoboIdle.player_state = states.Grapple;
}
if(instance_place(x-1,y-1,par_corner))
{  
    againstGround = 1;
    canJump = 0;
    speed = 0;
    objRoboIdle.hookContact = 1;
    objRoboIdle.player_state = states.Grapple;
}
if(instance_place(x,y-1,par_corner))
{  
    againstGround = 1;
    canJump = 0;
    speed = 0;
    objRoboIdle.hookContact = 1;
    objRoboIdle.player_state = states.Grapple;
}


/*//stop object against moveables (able to pull them around)
if(instance_place(x+1,y+1,par_move))
{
    againstMovable = 1;
    speed = 0;
    objRoboIdle.hookContact = 1;
}
if(instance_place(x,y+1,par_move))
{  
    againstMovable = 1;
    speed = 0;
    objRoboIdle.hookContact = 1;
}
if(instance_place(x-1,y-1,par_move))
{  
    againstMovable = 1;
    speed = 0;
    objRoboIdle.hookContact = 1;
}
if(instance_place(x,y-1,par_move))
{  
    againstMovable = 1;
    speed = 0;
    objRoboIdle.hookContact = 1;
}*/

if((distance_to_object(objRoboIdle) &gt; 100) &amp;&amp; !againstMovable &amp;&amp; !againstGround )
{
    objRoboIdle.hookShot = 0;
    objRoboIdle.hookContact = 0;
    objRoboIdle.player_state = states.Normal;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(objRoboIdle)) draw_line_width(x,y,objRoboIdle.x,objRoboIdle.y-12,2);
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
