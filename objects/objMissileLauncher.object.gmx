<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMissileLauncher</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 10;
mode = 1; //0 = deactrivated, 1 = activated
missileFired = 0;
var theMissile;
alarm1 = 0;
readyToFire = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(collision_rectangle(x, y, x+230, y+75, objRoboIdle, false, true ) &amp;&amp; mode == 1)
{

theMissile = instance_create(x+lengthdir_x(0,image_angle),y+lengthdir_y(0,image_angle),objMissile);
//audio_play_sound(snd_missilepop,13,false);
audio_play_sound_at(snd_missilepop, objMissileLauncher.x+20, objMissileLauncher.y, 0, 100, 100, 1, false, 1);
theMissile.image_angle = objMissileLauncher.image_angle;
theMissile.direction = objMissileLauncher.image_angle;
theMissile.speed = 6;

alarm[1]=70;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(image_angle &lt;360 &amp;&amp; image_angle!=0)
{
    image_angle++;
    alarm[0] = 1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(collision_rectangle(x, y, x+230, y+75, objRoboIdle, false, true ) &amp;&amp; mode == 1)
{
    
    image_angle = floor(point_direction(x,y,objRoboIdle.x,objRoboIdle.y));
    
    if(!audio_is_playing(snd_ticking))
    {
        //audio_play_sound_at(snd_ticking, objMissileLauncher.x+20, objMissileLauncher.y, 0, 100, 100, 1, false, 1);
        //audio_listener_position(objRoboIdle.x, objRoboIdle.y, 0);
        //audio_listener_set_position(objRoboIdle,x,y,0);
        audio_play_sound(snd_ticking,12,false);
        audio_sound_gain(snd_ticking,0.55,0);
    }
    alarm[0]=1;
    if(alarm1&lt;1)
    {
        alarm[1]=35;
        alarm1++;
    }
}
else
{
    alarm1 = 0;
}

if(global.targetModes &gt; 2)
{
    image_speed = 1;
    mode = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
