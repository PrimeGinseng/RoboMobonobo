<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprRoboIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stuff

grav = 0.2;
hspeed_ = 0;
vspeed_ = 0;
jumpspeed = 3.2;
movespeed = 1;
jumps = 2;
JUMPSMAX = 2;
jumpaccel = 0;

key_right_active = 1;
key_left_active = 1;
key_down_active = 1;
key_up_active = 1;
key_jump_active = 1;
key_grapple_active = 1;

momentum = 1;

vspeed_save = 0;
hspeed_save = 0;

grounded = 0;

allowedToMove = 1;
canJump = 1;


victory = 0;
victoryAlarm = 0;
victoryJumps = 0;

depth = -1000;

image_speed = 0.15;

hookShot = 0;
hookContact = 0;

player_state = states.Normal;


faggot = 0;


//pendulate stuff
pendulateExecuted = 0;
xoriginal = 0;
yoriginal = 0;

forcex = 0;
forcey = 0.5;
mass = 1;
coefrestore = 0.80; //0.40 for pendulum_TEST, 0.80 for others
// These variables should be left as-is.
xspd = 0;
yspd = 0;
xacc = 0;
yacc = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_stop_all(); 
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create(x,y,objResults);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(victoryJumps&lt;4)
{
y+=-5;
victoryJumps++;
alarm[0] = 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_listener_position(objRoboIdle.x, objRoboIdle.y, 0);
audio_listener_orientation(0, 0, 1000, 0, 0, 0);

if(instance_exists(obj_hook)) faggot = distance_to_object(obj_hook);

//get inputs
scr_input();

//movement code
scr_movement();

scr_grapple();



//animations
scr_animations();


//move to the grapple point
if(player_state = states.Grapple)
{
    if(vspeed_save == 0) vspeed_save = vspeed_;
    if(hspeed_save == 0) hspeed_save = hspeed_;
    vspeed_ = 0;
    hspeed_ = 0;
    grav = 0;
    scr_pendulate();
}



if(victory &amp;&amp; !victoryAlarm)
{
    y-=5;
    victoryAlarm = 1;
    victoryJumps++;
    alarm[0] = 30;
    alarm[1] = 120;
}

//explosion sound
if(instance_exists(objExplosion))
{
    if(collision_rectangle(x-150,y-75,x+150,y+75,objExplosion,false,true))
    {
        if(!audio_is_playing(snd_explosion))
        audio_play_sound(snd_explosion,10,false);
    }
}







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_explodable">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>objDeleteEvent.alarm[0]=60;

if(!audio_is_playing(snd_death))
audio_play_sound(snd_death,15,false);

scrExplode();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//audio_stop_all(); 
room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(objBigHead))
    instance_create(x,y,objBigHead);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy object outside of room

if(room == MainMenu)
{
    game_end();
}
else
{
    x = xoriginal;
    y = yoriginal;
    if(instance_exists(obj_hook))
    {
        with(obj_hook) { instance_destroy(); }
        hookShot = 0;
        hookContact = 0;
        pendulateExecuted = 0;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
